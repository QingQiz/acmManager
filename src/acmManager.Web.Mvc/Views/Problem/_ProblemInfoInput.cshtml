@using acmManager.Problem
@model acmManager.Problem.Dto.GetSolutionOutput
@inject ProblemAppService ProblemAppService

@{
    var allTypes = await ProblemAppService.GetAllProblemTypes("");
}


<div class="input-group mb-3">
    <input type="text"
           name="Name" id="problem-name" class="form-control"
           value="@(Model?.ProblemName ?? "")" placeholder="@L("Problem.Name")">
</div>

<div class="input-group mb-3">
    <input type="text"
           name="Url" id="problem-url" class="form-control"
           value="@(Model?.ProblemUrl ?? "")" placeholder="@L("Problem.Url")">
</div>

<div class="input-group input-group mb-3">
    <select multiple name="TypeIds"
            data-live-search="true"
            data-width="100%"
            data-selected-text-format="count > 5"
            title="@L("Problem.Type")"
            data-style="multi-selector">
        @foreach (var t in allTypes)
        {
            @if (Model != null && Model.ProblemTypes.Any(pt => pt.Name == t.Name))
            {
                <option value="@t.Id" data-subtext="@t.Description" selected> @L(t.Name) </option>
            }
            else
            {
                <option value="@t.Id" data-subtext="@t.Description"> @L(t.Name) </option>
            }
        }
    </select>
</div>

<div id="problem-description-content">
    <textarea hidden name="Description">@(Model?.ProblemDescription ?? L("Problem.Description") + "\n\n\n\n\n")</textarea>
</div>
