@using acmManager.File
@using acmManager.Web.Controllers
@using acmManager.Web.Models.Shared
@model acmManager.Web.Models.Shared.CommentViewModel;
@inject FileAppService FileAppService

@{
    var getUserPhoto = new Func<long, Task<string>>(async userId
        => (await FileAppService.GetUserPhotoAsync(userId))?.FilePath ?? UserController.DefaultUserPhoto);
    var commentGroups = Model.Comments.GroupBy(c => c.ReplyToCommentId).ToList();
    var rootComments = commentGroups.First(g => g.Key == 0);
}


@foreach (var comment in rootComments)
{
    @await Html.PartialAsync("Template/_CreatorTag", new CreatorViewModel(comment.CreatorUserId, comment.CreationTime))
    <div style="margin-left: 24px">
        @* comment content *@
        <div class="comments" id="comment-@comment.Id" style="max-width: 99%;">
            <textarea hidden>@comment.Content</textarea>
        </div>

        @* reply button *@
        <div class="noSelect" style="margin-left: 20px">
            <div class="badge badge-secondary" style="font-size: 16px; letter-spacing: 2px"
                 onclick="location.href = '@Model.ReplyToCommentLinkGenerator(comment.Id)'">
                <i class="fa fa-reply"> </i> @L("Comment.Reply")
            </div>
        </div>
    </div>
    <hr/>
}
